{"version":3,"file":"static/js/944.8081c560.chunk.js","mappings":"qSA8GA,UA1Fc,WAEV,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMC,SAASH,MAAM,IAEtDI,GAASC,EAAAA,EAAAA,IAAU,CACrBC,SAAU,SAACC,GACP,IAAMC,EAA0B,CAAC,EAcjC,OAbKD,EAAOE,MAIA,4CAA4CC,KAAKH,EAAOE,SAChED,EAAOC,MAAQ,yBAHXD,EAAOC,MAAQ,WAMlBF,EAAOI,SAEDJ,EAAOI,SAASC,OAAS,IAChCJ,EAAOG,SAAW,iCAFlBH,EAAOG,SAAW,WAIfH,CAEX,EACAK,cAAe,CACXJ,MAAO,GACPE,SAAU,GACVG,YAAY,GAGhBC,SAAU,SAACR,EAAQS,GACflB,GAASmB,EAAAA,EAAAA,IAAQV,IACjBS,EAAYE,WAChB,IAGJ,OAAIlB,GACOmB,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAI,cAGlBF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,WAAS,EAACC,eAAgB,SAASC,UAC5CN,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACI,MAAI,EAACF,eAAgB,SAASC,UAEhCE,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAAAH,SAAA,EACRE,EAAAA,EAAAA,MAACE,EAAAA,EAAS,CAAAJ,SAAA,EAENE,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAG,4BACCN,EAAAA,EAAAA,KAAA,KAAGW,KAAM,wCACNC,OAAQ,SAASN,SAAC,cAGzBN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,6CACHN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,+BACHN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,uBAEPN,EAAAA,EAAAA,KAAA,QAAMJ,SAAUX,EAAO4B,aAAaP,UAChCE,EAAAA,EAAAA,MAACM,EAAAA,EAAS,CAAAR,SAAA,EACNN,EAAAA,EAAAA,KAACe,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACNC,MAAM,QACNC,OAAO,UACHjC,EAAOkC,cAAc,WAG5BlC,EAAOmC,QAAQ9B,OAASL,EAAOI,OAAOC,OACnCU,EAAAA,EAAAA,KAAA,OAAKqB,MAAO,CAACC,MAAO,OAAOhB,SAAErB,EAAOI,OAAOC,QAAe,MAE9DU,EAAAA,EAAAA,KAACe,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACNO,KAAK,WACLN,MAAM,WACNC,OAAO,UACHjC,EAAOkC,cAAc,cAE5BlC,EAAOmC,QAAQ5B,UAAYP,EAAOI,OAAOG,UACtCQ,EAAAA,EAAAA,KAAA,OAAKqB,MAAO,CAACC,MAAO,OAAOhB,SAAErB,EAAOI,OAAOG,WAAkB,MACjEQ,EAAAA,EAAAA,KAACwB,EAAAA,EAAgB,CAACP,MAAO,cACPQ,SAASzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAQV,EAAAA,EAAAA,GAAA,GACV/B,EAAOkC,cAAc,mBAE/CnB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACJ,KAAM,SAAUK,QAAS,YAAaN,MAAO,UAAUhB,SAAC,qBAUxF,C","sources":["components/Login/Login.tsx"],"sourcesContent":["import React from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport {useFormik} from \"formik\";\r\nimport {useAppDispatch, useAppSelector} from \"../../redux/store\";\r\nimport {loginTC} from \"../../redux/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n\r\n}\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const isAuth = useAppSelector(state => state.userAuth.isAuth)\r\n\r\n    const formik = useFormik({\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                {\r\n                    errors.email = 'Required'\r\n                }\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required'\r\n            } else if (values.password.length < 3) {\r\n                errors.password = 'Must be 3 or more characters '\r\n            }\r\n            return errors\r\n\r\n        },\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n\r\n        },\r\n        onSubmit: (values, submitProps) => {\r\n            dispatch(loginTC(values))\r\n            submitProps.resetForm()\r\n        },\r\n    });\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n\r\n    return <Grid container justifyContent={'center'}>\r\n        <Grid item justifyContent={'center'}>\r\n\r\n            <FormControl>\r\n                <FormLabel>\r\n\r\n                    <p>To log in get registered\r\n                        <a href={'https://social-network.samuraijs.com/'}\r\n                           target={'_blank'}> here\r\n                        </a>\r\n                    </p>\r\n                    <p>or use common test account credentials:</p>\r\n                    <p>Email: free@samuraijs.com</p>\r\n                    <p>Password: free</p>\r\n                </FormLabel>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('email')}\r\n\r\n                        />\r\n                        {formik.touched.email && formik.errors.email ?\r\n                            <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\r\n\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                        {formik.touched.password && formik.errors.password ?\r\n                            <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n                        <FormControlLabel label={'Remember me'}\r\n                                          control={<Checkbox\r\n                                              {...formik.getFieldProps('rememberMe')}\r\n                                          />}/>\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>\r\n\r\n                            Login\r\n                        </Button>\r\n                    </FormGroup>\r\n                </form>\r\n            </FormControl>\r\n\r\n        </Grid>\r\n    </Grid>\r\n}\r\n\r\nexport default Login"],"names":["dispatch","useAppDispatch","isAuth","useAppSelector","state","userAuth","formik","useFormik","validate","values","errors","email","test","password","length","initialValues","rememberMe","onSubmit","submitProps","loginTC","resetForm","_jsx","Navigate","to","Grid","container","justifyContent","children","item","_jsxs","FormControl","FormLabel","href","target","handleSubmit","FormGroup","TextField","_objectSpread","label","margin","getFieldProps","touched","style","color","type","FormControlLabel","control","Checkbox","Button","variant"],"sourceRoot":""}